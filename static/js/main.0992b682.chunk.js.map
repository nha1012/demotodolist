{"version":3,"sources":["Itemtodo.js","Finished.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["Itemtodo","remove","_this","props","id","edit","content","_this2","this","react_default","a","createElement","onClick","class","Component","Finished","capitalize","require","mang","mangedit","manghoanthanh","Form","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isChange","event","setState","itemadd","target","value","itemedit","showmessage","state","message","type","data-dismiss","aria-label","aria-hidden","add","isEdit","push","list","editformang","mangxoa","map","key","finished","removeall","idedit","className","required","onChange","placeholder","name","src_Itemtodo","data-toggle","title","src_Finished","App","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0992b682.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Itemtodo extends Component {\r\n    remove=()=>{\r\n        this.props.remove(this.props.id)\r\n    }\r\n    edit=()=>{\r\n        this.props.edit(this.props.content,this.props.id)\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <h3>{this.props.content} < i  onClick={()=>this.edit()} class=\"fas fa-pencil-alt\"></i> <i onClick={()=>this.remove()} class=\"fas fa-trash-alt\"></i></h3>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Itemtodo;","import React, { Component } from 'react';\r\n\r\nclass Finished extends Component {\r\n    render() {\r\n        return (\r\n            <li>\r\n                <h3>{this.props.content} </h3>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Finished;","import React, { Component } from 'react';\r\nimport Itemtodo from './Itemtodo';\r\nimport Finished from './Finished';\r\nvar capitalize = require('capitalize');\r\nvar mang=[];\r\nvar  mangedit=[]\r\nvar manghoanthanh=[];\r\nclass Form extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state={\r\n            list:[],\r\n            finished:[],\r\n            itemadd: \"\",\r\n            isEdit: \"Add\",\r\n            itemedit: \"\",\r\n            message:\"\"\r\n        }\r\n    }\r\n    isChange=(event)=>{\r\n       this.setState({\r\n           itemadd: capitalize( event.target.value),\r\n           itemedit: capitalize(event.target.value)\r\n       })\r\n\r\n    }\r\n    showmessage=()=>{\r\n        if(this.state.message===\"rong\"){\r\n            return(\r\n                <div class=\"alert alert-danger \">\r\n                <strong>Bạn chưa nhập</strong> Kiểm tra lại đi!!\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                </div>\r\n            )\r\n        }\r\n        else    \r\n        return null\r\n    }\r\n    add=(event)=>{\r\n\r\n        if(this.state. isEdit===\"Add\"){\r\n\r\n            if(this.state.itemadd === \"\")\r\n        {\r\n           this.setState({\r\n               message: \"rong\"\r\n           })\r\n        }\r\n        else{\r\n            mang.push(this.state.itemadd)\r\n            this.setState({\r\n            list: mang,\r\n            itemadd: \"\",\r\n            message:\"\"\r\n             })\r\n        }\r\n        }\r\n        else{\r\n            this.editformang()\r\n        }\r\n        this.setState({\r\n            itemedit:\"\",\r\n            itemadd: \"\"\r\n        })\r\n      \r\n    }\r\n    remove=(id)=>{\r\n        var mangxoa=[]\r\n        this.state.list.map((value, key) =>{\r\n          if(key !==id ){\r\n            mangxoa.push(value)\r\n          }\r\n          else\r\n            manghoanthanh.push(value)\r\n        })\r\n        mang= mangxoa\r\n        this.setState({\r\n            list: mang,\r\n            finished: manghoanthanh,\r\n            itemedit: \"\"\r\n        })\r\n        \r\n    }\r\n    removeall=()=>{\r\n        manghoanthanh=[]\r\n        this.setState({\r\n            finished: []\r\n        })\r\n    }\r\n    edit=(content ,id)=>{\r\n        this.setState({\r\n            isEdit: \"Save\",\r\n            itemedit: content,\r\n            idedit:id\r\n        })\r\n    }\r\n    editformang=()=>{\r\n        mangedit=[]\r\n        mang.map((value,key)=>{\r\n            if(this.state.idedit !== key){\r\n                mangedit.push(value)\r\n            }\r\n            else\r\n                mangedit.push(this.state.itemedit)\r\n        })\r\n        this.setState({\r\n            list : mangedit\r\n        })\r\n        this.setState({\r\n            isEdit:\"Add\",\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n            <div className=\"form-group\">\r\n                <h1> To Do <small>List</small></h1>\r\n                    {this.showmessage()}\r\n                <form >\r\n                <input value={this.state.itemedit} required onChange={(event)=>this.isChange(event)} type=\"text\" className=\"form-control\" placeholder=\"Your Task\" name=\"task\" />\r\n                <button  type=\"reset\"  onClick={(event)=>this.add(event)}className=\"btn btn btn-primary  btn-block\">{this.state.isEdit}</button>\r\n                </form>\r\n              \r\n            </div>\r\n            <div />\r\n            </div>\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n              <ul className=\"col-sm-6\">\r\n                <h2>Chưa hoàn thành</h2>\r\n                {this.state.list.map((value, key) =>{\r\n                    return(<Itemtodo edit={()=>this.edit(value,key)} content= {value} id={key} remove={()=>this.remove(key)}> </Itemtodo>)\r\n                })}\r\n              </ul>\r\n              <ul  className=\"col-sm-6\"> \r\n                <h2>Đã hoàn thành <i onClick={()=>this.removeall()} class=\"fas fa-times\" data-toggle=\"tooltip\" title=\"Xóa all!!!!!\"></i></h2>\r\n                {this.state.finished.map((value, key) =>{\r\n                    return(<Finished content= {value} id={key} > </Finished>)\r\n                })}\r\n              </ul>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Form></Form>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}